--
-- PostgreSQL database dump
--

-- Dumped from database version 14.8 (Ubuntu 14.8-0ubuntu0.22.04.1)
-- Dumped by pg_dump version 14.8 (Ubuntu 14.8-0ubuntu0.22.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: app_project; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.app_project (
    id bigint NOT NULL,
    short_title character varying(100) NOT NULL,
    title character varying(1000) NOT NULL,
    tools character varying(1000) NOT NULL,
    goal character varying(1000) NOT NULL,
    link_to_site character varying(500) NOT NULL,
    link_to_code character varying(500) NOT NULL,
    description text NOT NULL
);


ALTER TABLE public.app_project OWNER TO postgres2;

--
-- Name: app_project_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.app_project ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.app_project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: app_skill; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.app_skill (
    id bigint NOT NULL,
    "order" integer NOT NULL,
    type character varying NOT NULL,
    text character varying(200) NOT NULL,
    skill_score integer,
    is_hidden boolean NOT NULL,
    to_improve boolean NOT NULL,
    CONSTRAINT app_skill_order_check CHECK (("order" >= 0)),
    CONSTRAINT app_skill_skill_score_check CHECK ((skill_score >= 0))
);


ALTER TABLE public.app_skill OWNER TO postgres2;

--
-- Name: app_skill_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.app_skill ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.app_skill_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres2;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres2;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres2;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres2;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres2;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres2;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres2;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres2;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres2;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres2
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres2
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres2;

--
-- Data for Name: app_project; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.app_project (id, short_title, title, tools, goal, link_to_site, link_to_code, description) FROM stdin;
3	project3	Магазин по продаже книг	Django, PostgreSQL, API (DRF)	Магазин по продаже книг	http://80.90.188.61:81/	https://github.com/K-Alex-N/NW_django	распределение прав по группам. недоступные данные прячутся как на уровне html так и защищаются (от прямых ссылок) в контроллере. \r\n\r\nесть API \r\n\r\nнемного тестов
1	project1	Портфолио (текущий сайт)	Django, PostgreSQL	автоматизированно описать проекты и навыки	текущий сайт	https://github.com/K-Alex-N/portfolio	<p><strong>Инструменты:&nbsp;</strong>Django, PostgreSQL</p>\r\n\r\n<p><strong>Задача:&nbsp;</strong>автоматизированно описать проекты и навыки</p>\r\n\r\n<p>Вводится навык и его величина. Автоматически строиться &quot;рrogress bar&quot;, подбирается цвет и текст (в зависимости от величины навыка).</p>\r\n\r\n<p><img alt="" src="/media/21.png" style="height:749px; width:900px" /></p>
2	project2	Парсер сайта GitHub c web-интерфейсом на Flask	Flask, SQLAlchemy 2.0, Beautifulsoup, PostgreSQL, Alembic	автоматизированный сбор данных с сайта Github. Новое задание на парсинг можно добавить через web интерфейс.	http://80.90.188.61:82/	https://github.com/K-Alex-N/get_data_from_github	<table border="0" cellpadding="0" cellspacing="0" style="width:500px">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td><strong>Инструменты:&nbsp;</strong>Flask, SQLAlchemy 2.0, Beautifulsoup, PostgreSQL, Alembic</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td><strong>Задача:&nbsp;</strong>автоматизированный сбор данных с сайта Github. Новое задание на парсинг можно добавить через web интерфейс.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Описание:&nbsp;</strong>мб карусель фотографий создать. Хорошая идея. Хотя фотографии можно и просто по прорядку выложить. регестрируюсь-добавляю парсинг-могу его изменить/удалить Картинку добавить. Да блин прежде всего его нужно запустить на хостинге чтобы скрапить начал!!! Любой человек может добавить задание на парсинг. Это список сайтов которые будут ежедневно парситься. Пасрер собирает данные о количестве звезд, последнем резизе и тд Скрипт работает на хостинге и автоматически запускается каждый день. o Данные пишутся в postgres БД ER-модель БД фото Данные можно забрать в виде json файла. Думаю о возможности построения графиков</p>\r\n\r\n<p>sdasd</p>\r\n\r\n<p>as<strong>da</strong></p>
\.


--
-- Data for Name: app_skill; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.app_skill (id, "order", type, text, skill_score, is_hidden, to_improve) FROM stdin;
3	30	progress_bar	ООП	80	f	f
1	10	title	Base	\N	f	f
12	32	progress_bar	Регулярные выражения	70	f	f
17	40	title	Frameworks	\N	f	f
14	50	title	Databases	\N	f	f
6	42	progress_bar	Django	70	f	f
18	43	progress_bar	Wagtail	0	t	f
2	20	progress_bar	Python	85	f	f
11	31	progress_bar	Алгоритмы и структуры данных	85	f	f
4	52	progress_bar	SQL, PostgreSQL, MySQL	70	f	f
5	54	progress_bar	SQLAlchemy	70	f	f
15	60	title	Deploy	\N	f	f
20	64	progress_bar	kubernetes	1	t	f
21	66	progress_bar	gunicorn	60	f	f
22	68	progress_bar	nginx	60	f	f
16	80	title	Разное	\N	f	f
13	95	progress_bar	Beautifulsoup, Selenium	70	f	f
23	85	progress_bar	Linux, Bush	80	f	f
8	46	progress_bar	Aiohttp	50	f	t
9	48	progress_bar	FastAPI	50	f	t
25	53	progress_bar	NoSQL (celery, redis, mongoDB, clickhouse...)	1	t	t
19	62	progress_bar	Docker	1	t	t
26	87	progress_bar	Git	60	f	t
10	90	progress_bar	Pytest, Unittest	60	f	t
24	100	progress_bar	API	1	t	t
27	34	progress_bar	HTML, CSS	60	f	f
7	44	progress_bar	Flask	67	f	f
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add project	7	add_project
26	Can change project	7	change_project
27	Can delete project	7	delete_project
28	Can view project	7	view_project
29	Can add skills	8	add_skills
30	Can change skills	8	change_skills
31	Can delete skills	8	delete_skills
32	Can view skills	8	view_skills
33	Can add skill	9	add_skill
34	Can change skill	9	change_skill
35	Can delete skill	9	delete_skill
36	Can view skill	9	view_skill
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$600000$xXfrlwNDqrjCImW0phyZYq$VmkpBemXflpfOK5IQZ+dJ825hLvFlcY427Iu8Wj0hAk=	2023-05-31 13:06:13.499703+03	t	admin				t	t	2023-05-30 04:00:38.584631+03
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2023-05-30 04:05:37.721271+03	1	Project object (1)	1	[{"added": {}}]	7	1
2	2023-05-30 04:07:55.657893+03	1	Текущий сайт	2	[{"changed": {"fields": ["Description"]}}]	7	1
3	2023-05-30 04:09:19.587141+03	1	Текущий сайт	2	[]	7	1
4	2023-05-30 04:11:09.126374+03	1	Текущий сайт	2	[{"changed": {"fields": ["Goal"]}}]	7	1
5	2023-05-30 04:22:05.339281+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	1	[{"added": {}}]	7	1
6	2023-05-30 04:23:09.515699+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[]	7	1
7	2023-05-30 04:24:29.454744+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[]	7	1
8	2023-05-30 04:28:32.93201+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[]	7	1
9	2023-05-30 04:29:13.769035+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[]	7	1
10	2023-05-30 04:29:22.245459+03	1	Текущий сайт	2	[]	7	1
11	2023-05-30 04:30:06.43904+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Goal", "Description"]}}]	7	1
12	2023-05-30 04:31:09.890624+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Link to site", "Link to code"]}}]	7	1
13	2023-05-30 04:33:30.772071+03	3	магазин по продаже книг	1	[{"added": {}}]	7	1
14	2023-05-30 09:36:35.87959+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Title"]}}]	7	1
15	2023-05-30 09:37:01.209405+03	1	Skills object (1)	1	[{"added": {}}]	8	1
16	2023-05-30 12:13:18.200165+03	1	Skill object (1)	1	[{"added": {}}]	9	1
17	2023-05-30 12:16:45.011021+03	2	Skill object (2)	1	[{"added": {}}]	9	1
18	2023-05-30 12:16:57.058863+03	3	Skill object (3)	1	[{"added": {}}]	9	1
19	2023-05-30 12:17:47.486219+03	1	Skill object (1)	2	[{"changed": {"fields": ["Skill score"]}}]	9	1
20	2023-05-30 12:22:04.140915+03	4	Skill object (4)	1	[{"added": {}}]	9	1
21	2023-05-30 12:22:11.809401+03	5	Skill object (5)	1	[{"added": {}}]	9	1
22	2023-05-30 12:22:25.185751+03	6	Skill object (6)	1	[{"added": {}}]	9	1
23	2023-05-30 12:22:47.29802+03	7	Skill object (7)	1	[{"added": {}}]	9	1
24	2023-05-30 12:22:56.984881+03	8	Skill object (8)	1	[{"added": {}}]	9	1
25	2023-05-30 12:23:07.366146+03	9	Skill object (9)	1	[{"added": {}}]	9	1
26	2023-05-30 12:23:22.424865+03	10	Skill object (10)	1	[{"added": {}}]	9	1
27	2023-05-30 12:23:35.80993+03	11	Skill object (11)	1	[{"added": {}}]	9	1
28	2023-05-30 12:23:51.587226+03	12	Skill object (12)	1	[{"added": {}}]	9	1
29	2023-05-30 12:24:03.697821+03	13	Skill object (13)	1	[{"added": {}}]	9	1
30	2023-05-30 12:25:49.067081+03	14	Skill object (14)	1	[{"added": {}}]	9	1
31	2023-05-30 12:26:05.595172+03	15	Skill object (15)	1	[{"added": {}}]	9	1
32	2023-05-30 12:26:13.082651+03	16	Skill object (16)	1	[{"added": {}}]	9	1
33	2023-05-30 12:26:58.523327+03	11	Skill object (11)	2	[{"changed": {"fields": ["Order"]}}]	9	1
34	2023-05-30 12:27:19.263356+03	11	Skill object (11)	2	[{"changed": {"fields": ["Order"]}}]	9	1
35	2023-05-30 12:27:19.264123+03	12	Skill object (12)	2	[{"changed": {"fields": ["Order"]}}]	9	1
36	2023-05-30 12:36:57.686609+03	17	Skill object (17)	1	[{"added": {}}]	9	1
37	2023-05-30 12:37:09.544497+03	17	Skill object (17)	2	[{"changed": {"fields": ["Order"]}}]	9	1
38	2023-05-30 12:37:32.074136+03	6	Skill object (6)	2	[{"changed": {"fields": ["Order"]}}]	9	1
39	2023-05-30 12:37:32.075067+03	7	Skill object (7)	2	[{"changed": {"fields": ["Order"]}}]	9	1
40	2023-05-30 12:37:32.075685+03	8	Skill object (8)	2	[{"changed": {"fields": ["Order"]}}]	9	1
41	2023-05-30 12:37:32.076257+03	9	Skill object (9)	2	[{"changed": {"fields": ["Order"]}}]	9	1
42	2023-05-30 12:41:45.267521+03	2	Skill object (2)	2	[{"changed": {"fields": ["Text"]}}]	9	1
43	2023-05-30 12:42:53.611429+03	14	Skill object (14)	2	[{"changed": {"fields": ["Order"]}}]	9	1
44	2023-05-30 12:43:09.24812+03	18	Skill object (18)	1	[{"added": {}}]	9	1
45	2023-05-30 12:47:47.658647+03	18	Skill object (18)	2	[{"changed": {"fields": ["Is hidden"]}}]	9	1
46	2023-05-30 13:01:01.707909+03	6	Skill object (6)	2	[{"changed": {"fields": ["Is hidden"]}}]	9	1
47	2023-05-30 13:01:06.910725+03	6	Skill object (6)	2	[{"changed": {"fields": ["Is hidden"]}}]	9	1
48	2023-05-30 13:01:40.822259+03	18	Skill object (18)	2	[{"changed": {"fields": ["Order"]}}]	9	1
49	2023-05-30 13:01:51.331095+03	18	Skill object (18)	2	[{"changed": {"fields": ["Skill score"]}}]	9	1
50	2023-05-30 13:26:37.712921+03	2	Skill object (2)	2	[{"changed": {"fields": ["Skill score"]}}]	9	1
51	2023-05-30 13:26:37.714164+03	11	Skill object (11)	2	[{"changed": {"fields": ["Skill score"]}}]	9	1
52	2023-05-30 13:27:27.788394+03	4	Skill object (4)	2	[{"changed": {"fields": ["Order", "Text"]}}]	9	1
53	2023-05-30 13:27:27.790032+03	5	Skill object (5)	2	[{"changed": {"fields": ["Order"]}}]	9	1
54	2023-05-30 13:29:59.537395+03	15	Skill object (15)	2	[{"changed": {"fields": ["Order"]}}]	9	1
55	2023-05-30 13:30:21.74171+03	19	Skill object (19)	1	[{"added": {}}]	9	1
56	2023-05-30 13:30:32.879628+03	19	Skill object (19)	2	[{"changed": {"fields": ["Text"]}}]	9	1
57	2023-05-30 13:30:57.530403+03	20	Skill object (20)	1	[{"added": {}}]	9	1
58	2023-05-30 13:31:11.495589+03	21	Skill object (21)	1	[{"added": {}}]	9	1
59	2023-05-30 13:31:21.828121+03	22	Skill object (22)	1	[{"added": {}}]	9	1
60	2023-05-30 13:32:14.467202+03	19	Skill object (19)	2	[{"changed": {"fields": ["Skill score"]}}]	9	1
61	2023-05-30 13:33:04.280122+03	16	Skill object (16)	2	[{"changed": {"fields": ["Order"]}}]	9	1
62	2023-05-30 13:33:23.589537+03	23	Skill object (23)	1	[{"added": {}}]	9	1
63	2023-05-30 13:35:33.818802+03	10	Skill object (10)	2	[{"changed": {"fields": ["Order", "Skill score"]}}]	9	1
64	2023-05-30 13:35:33.820459+03	13	Skill object (13)	2	[{"changed": {"fields": ["Order"]}}]	9	1
65	2023-05-30 13:36:17.066779+03	24	Skill object (24)	1	[{"added": {}}]	9	1
66	2023-05-30 13:36:42.218339+03	23	Skill object (23)	2	[{"changed": {"fields": ["Skill score"]}}]	9	1
67	2023-05-30 13:42:29.159364+03	3	Магазин по продаже книг	2	[{"changed": {"fields": ["Title", "Tools"]}}]	7	1
68	2023-05-30 13:42:38.800797+03	3	Магазин по продаже книг	2	[{"changed": {"fields": ["Goal"]}}]	7	1
69	2023-05-30 13:47:12.648226+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Goal"]}}]	7	1
70	2023-05-30 13:50:08.18251+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
71	2023-05-30 13:50:26.5821+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
72	2023-05-30 13:50:47.498488+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
73	2023-05-30 13:57:27.287109+03	1	Портфолио (текущий сайт)	2	[]	7	1
74	2023-05-30 13:58:00.901758+03	25	Skill object (25)	1	[{"added": {}}]	9	1
75	2023-05-30 13:59:35.631017+03	26	Skill object (26)	1	[{"added": {}}]	9	1
76	2023-05-30 14:04:21.440012+03	25	Skill object (25)	2	[{"changed": {"fields": ["Text"]}}]	9	1
77	2023-05-30 14:23:01.538167+03	8	Skill object (8)	2	[{"changed": {"fields": ["To improve"]}}]	9	1
78	2023-05-30 14:23:01.539327+03	9	Skill object (9)	2	[{"changed": {"fields": ["To improve"]}}]	9	1
79	2023-05-30 14:23:01.540199+03	25	Skill object (25)	2	[{"changed": {"fields": ["To improve"]}}]	9	1
80	2023-05-30 14:23:01.54098+03	19	Skill object (19)	2	[{"changed": {"fields": ["To improve"]}}]	9	1
81	2023-05-30 14:23:01.542269+03	26	Skill object (26)	2	[{"changed": {"fields": ["To improve"]}}]	9	1
82	2023-05-30 14:23:01.54316+03	10	Skill object (10)	2	[{"changed": {"fields": ["To improve"]}}]	9	1
83	2023-05-30 14:23:01.543728+03	24	Skill object (24)	2	[{"changed": {"fields": ["To improve"]}}]	9	1
84	2023-05-30 17:45:53.402558+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
85	2023-05-30 17:46:50.195547+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
86	2023-05-30 18:12:15.74634+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
87	2023-05-30 19:38:31.195684+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
88	2023-05-30 19:39:16.852608+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
89	2023-05-30 19:40:49.688522+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
90	2023-05-30 19:40:54.707013+03	1	Портфолио (текущий сайт)	2	[]	7	1
91	2023-05-30 20:00:05.5335+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
92	2023-05-30 20:01:08.961688+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
93	2023-05-30 20:04:10.078781+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
94	2023-05-30 20:04:49.024972+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
95	2023-05-30 20:06:11.867098+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
96	2023-05-30 20:33:45.079539+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
97	2023-05-30 20:37:01.625985+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
98	2023-05-30 20:37:40.214578+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
99	2023-05-30 20:38:15.141145+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
100	2023-05-30 20:39:26.485992+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
101	2023-05-30 20:41:25.08798+03	1	Портфолио (текущий сайт)	2	[]	7	1
102	2023-05-30 20:51:45.997684+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Link to site"]}}]	7	1
103	2023-05-30 20:53:12.208192+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Link to site"]}}]	7	1
104	2023-05-30 20:56:52.806964+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Link to site"]}}]	7	1
105	2023-05-30 20:59:32.390559+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
106	2023-05-30 21:03:31.990117+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Link to site"]}}]	7	1
107	2023-05-31 10:27:56.718251+03	1	Портфол     ио (текущий сайт)	2	[{"changed": {"fields": ["Title"]}}]	7	1
108	2023-05-31 10:28:28.24273+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Title"]}}]	7	1
109	2023-05-31 10:36:19.968869+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
110	2023-05-31 13:06:43.698212+03	27	Skill object (27)	1	[{"added": {}}]	9	1
111	2023-05-31 13:09:11.827607+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
112	2023-05-31 13:09:57.444608+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
113	2023-05-31 15:41:34.309235+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
114	2023-05-31 15:41:57.016647+03	2	Парсер сайта GitHub c web-интерфейсом на Flask	2	[{"changed": {"fields": ["Description"]}}]	7	1
115	2023-05-31 15:50:28.451339+03	7	Skill object (7)	2	[{"changed": {"fields": ["Skill score"]}}]	9	1
116	2023-05-31 15:51:25.894236+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
117	2023-05-31 15:51:58.321345+03	1	Портфолио (текущий сайт)	2	[{"changed": {"fields": ["Description"]}}]	7	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	app	project
8	app	skills
9	app	skill
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2023-05-30 04:00:03.982955+03
2	auth	0001_initial	2023-05-30 04:00:04.041688+03
3	admin	0001_initial	2023-05-30 04:00:04.062067+03
4	admin	0002_logentry_remove_auto_add	2023-05-30 04:00:04.068331+03
5	admin	0003_logentry_add_action_flag_choices	2023-05-30 04:00:04.074675+03
6	app	0001_initial	2023-05-30 04:00:04.08199+03
7	contenttypes	0002_remove_content_type_name	2023-05-30 04:00:04.091212+03
8	auth	0002_alter_permission_name_max_length	2023-05-30 04:00:04.097679+03
9	auth	0003_alter_user_email_max_length	2023-05-30 04:00:04.10378+03
10	auth	0004_alter_user_username_opts	2023-05-30 04:00:04.10865+03
11	auth	0005_alter_user_last_login_null	2023-05-30 04:00:04.114277+03
12	auth	0006_require_contenttypes_0002	2023-05-30 04:00:04.116436+03
13	auth	0007_alter_validators_add_error_messages	2023-05-30 04:00:04.123795+03
14	auth	0008_alter_user_username_max_length	2023-05-30 04:00:04.13127+03
15	auth	0009_alter_user_last_name_max_length	2023-05-30 04:00:04.136756+03
16	auth	0010_alter_group_name_max_length	2023-05-30 04:00:04.143398+03
17	auth	0011_update_proxy_permissions	2023-05-30 04:00:04.14856+03
18	auth	0012_alter_user_first_name_max_length	2023-05-30 04:00:04.154992+03
19	sessions	0001_initial	2023-05-30 04:00:04.166832+03
20	app	0002_project_description	2023-05-30 04:07:10.890527+03
21	app	0003_skills	2023-05-30 09:36:16.062801+03
22	app	0004_skill_delete_skills	2023-05-30 11:26:38.475881+03
23	app	0005_alter_skill_skill_score	2023-05-30 12:16:05.954841+03
24	app	0006_alter_skill_skill_score	2023-05-30 12:17:38.700645+03
25	app	0007_alter_skill_options_skill_is_hidden	2023-05-30 12:46:48.727465+03
26	app	0008_alter_project_options_skill_to_improve	2023-05-30 14:09:44.894861+03
27	app	0009_alter_project_description	2023-05-30 17:48:15.406721+03
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres2
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
gon7qhljufyd1kzbyskxtgjec8fj7ytc	.eJxVjDsOwjAQBe_iGln-rT-U9JzBWttrHECOFCcV4u4QKQW0b2bei0Xc1ha3QUucCjszyU6_W8L8oL6Dcsd-m3me-7pMie8KP-jg17nQ83K4fwcNR_vWrhIqVALAZJBVSxG8CBLAOokmhVStURKsrxoFBe1UQtJE1XgyECx7fwC_mTcZ:1q4GFH:c6DJKgIMyVM0wG0iS6AW4bCp4MCti52p0DpIHIhegak	2023-06-14 10:27:47.740751+03
41ud2vljyrlmmtpu76bbl3g5281cqgna	.eJxVjDsOwjAQBe_iGln-rT-U9JzBWttrHECOFCcV4u4QKQW0b2bei0Xc1ha3QUucCjszyU6_W8L8oL6Dcsd-m3me-7pMie8KP-jg17nQ83K4fwcNR_vWrhIqVALAZJBVSxG8CBLAOokmhVStURKsrxoFBe1UQtJE1XgyECx7fwC_mTcZ:1q4Iib:TW_heWh__C5OH3tW8KvURPJhaoWTnh0viqBcWPh53I4	2023-06-14 13:06:13.501882+03
\.


--
-- Name: app_project_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.app_project_id_seq', 3, true);


--
-- Name: app_skill_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.app_skill_id_seq', 27, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 36, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 117, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 9, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres2
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 27, true);


--
-- Name: app_project app_project_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.app_project
    ADD CONSTRAINT app_project_pkey PRIMARY KEY (id);


--
-- Name: app_skill app_skill_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.app_skill
    ADD CONSTRAINT app_skill_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres2
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres2
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

